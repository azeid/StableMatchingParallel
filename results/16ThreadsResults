/usr/lib/jvm/java-8-openjdk-amd64/bin/java "-javaagent:/lib/idea_rt.jar=41067:/bin" -Dfile.encoding=UTF-8 -classpath /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/home/gleon/Projects/StableMatchingParallel/target/test-classes:/home/gleon/Projects/StableMatchingParallel/target/classes:/home/gleon/.m2/repository/org/openjdk/jmh/jmh-core/1.21/jmh-core-1.21.jar:/home/gleon/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/gleon/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/gleon/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.21/jmh-generator-annprocess-1.21.jar bench.BenchmarkRunner
# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerCallable
# Parameters: (fileName = testCases/BestCase_10.txt)

# Run progress: 0.00% complete, ETA 00:39:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.176 ms/op
# Warmup Iteration   2: 0.171 ms/op
# Warmup Iteration   3: 0.165 ms/op
Iteration   1: 0.168 ms/op
Iteration   2: 0.169 ms/op
Iteration   3: 0.168 ms/op
Iteration   4: 0.167 ms/op
Iteration   5: 0.167 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerCallable":
  0.168 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.167, 0.168, 0.169), stdev = 0.001
  CI (99.9%): [0.165, 0.170] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerCallable
# Parameters: (fileName = testCases/BestCase_100.txt)

# Run progress: 2.78% complete, ETA 00:38:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.769 ms/op
# Warmup Iteration   2: 0.693 ms/op
# Warmup Iteration   3: 0.691 ms/op
Iteration   1: 0.688 ms/op
Iteration   2: 0.692 ms/op
Iteration   3: 0.692 ms/op
Iteration   4: 0.692 ms/op
Iteration   5: 0.690 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerCallable":
  0.691 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.688, 0.691, 0.692), stdev = 0.002
  CI (99.9%): [0.684, 0.697] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerCallable
# Parameters: (fileName = testCases/BestCase_200.txt)

# Run progress: 5.56% complete, ETA 00:37:12
# Fork: 1 of 1
# Warmup Iteration   1: 2.348 ms/op
# Warmup Iteration   2: 2.147 ms/op
# Warmup Iteration   3: 2.148 ms/op
Iteration   1: 2.146 ms/op
Iteration   2: 2.145 ms/op
Iteration   3: 2.158 ms/op
Iteration   4: 2.150 ms/op
Iteration   5: 2.166 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerCallable":
  2.153 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (2.145, 2.153, 2.166), stdev = 0.009
  CI (99.9%): [2.120, 2.187] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerCallable
# Parameters: (fileName = testCases/BestCase_1000.txt)

# Run progress: 8.33% complete, ETA 00:36:06
# Fork: 1 of 1
# Warmup Iteration   1: 48.239 ms/op
# Warmup Iteration   2: 43.808 ms/op
# Warmup Iteration   3: 43.814 ms/op
Iteration   1: 44.110 ms/op
Iteration   2: 43.972 ms/op
Iteration   3: 43.838 ms/op
Iteration   4: 43.726 ms/op
Iteration   5: 44.207 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerCallable":
  43.971 ±(99.9%) 0.752 ms/op [Average]
  (min, avg, max) = (43.726, 43.971, 44.207), stdev = 0.195
  CI (99.9%): [43.218, 44.723] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.parallelGaleShapley
# Parameters: (fileName = testCases/BestCase_10.txt)

# Run progress: 11.11% complete, ETA 00:35:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.186 ms/op
# Warmup Iteration   2: 0.176 ms/op
# Warmup Iteration   3: 0.176 ms/op
Iteration   1: 0.175 ms/op
Iteration   2: 0.181 ms/op
Iteration   3: 0.175 ms/op
Iteration   4: 0.175 ms/op
Iteration   5: 0.175 ms/op


Result "bench.BenchmarkBestCases.parallelGaleShapley":
  0.176 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.175, 0.176, 0.181), stdev = 0.003
  CI (99.9%): [0.165, 0.186] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.parallelGaleShapley
# Parameters: (fileName = testCases/BestCase_100.txt)

# Run progress: 13.89% complete, ETA 00:34:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.421 ms/op
# Warmup Iteration   2: 0.411 ms/op
# Warmup Iteration   3: 0.386 ms/op
Iteration   1: 0.379 ms/op
Iteration   2: 0.375 ms/op
Iteration   3: 0.379 ms/op
Iteration   4: 0.382 ms/op
Iteration   5: 0.383 ms/op


Result "bench.BenchmarkBestCases.parallelGaleShapley":
  0.379 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.375, 0.379, 0.383), stdev = 0.003
  CI (99.9%): [0.367, 0.392] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.parallelGaleShapley
# Parameters: (fileName = testCases/BestCase_200.txt)

# Run progress: 16.67% complete, ETA 00:32:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.605 ms/op
# Warmup Iteration   2: 0.571 ms/op
# Warmup Iteration   3: 0.579 ms/op
Iteration   1: 0.564 ms/op
Iteration   2: 0.565 ms/op
Iteration   3: 0.571 ms/op
Iteration   4: 0.555 ms/op
Iteration   5: 0.566 ms/op


Result "bench.BenchmarkBestCases.parallelGaleShapley":
  0.564 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (0.555, 0.564, 0.571), stdev = 0.006
  CI (99.9%): [0.542, 0.587] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.parallelGaleShapley
# Parameters: (fileName = testCases/BestCase_1000.txt)

# Run progress: 19.44% complete, ETA 00:31:48
# Fork: 1 of 1
# Warmup Iteration   1: 2.402 ms/op
# Warmup Iteration   2: 2.199 ms/op
# Warmup Iteration   3: 2.118 ms/op
Iteration   1: 2.117 ms/op
Iteration   2: 2.109 ms/op
Iteration   3: 2.118 ms/op
Iteration   4: 2.110 ms/op
Iteration   5: 2.123 ms/op


Result "bench.BenchmarkBestCases.parallelGaleShapley":
  2.115 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (2.109, 2.115, 2.123), stdev = 0.006
  CI (99.9%): [2.092, 2.139] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.serial
# Parameters: (fileName = testCases/BestCase_10.txt)

# Run progress: 22.22% complete, ETA 00:30:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.011 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.011 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.011 ms/op


Result "bench.BenchmarkBestCases.serial":
  0.011 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.011, 0.011, 0.011), stdev = 0.001
  CI (99.9%): [0.011, 0.011] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.serial
# Parameters: (fileName = testCases/BestCase_100.txt)

# Run progress: 25.00% complete, ETA 00:29:38
# Fork: 1 of 1
# Warmup Iteration   1: 1.010 ms/op
# Warmup Iteration   2: 0.864 ms/op
# Warmup Iteration   3: 0.870 ms/op
Iteration   1: 0.865 ms/op
Iteration   2: 0.870 ms/op
Iteration   3: 0.865 ms/op
Iteration   4: 0.868 ms/op
Iteration   5: 0.867 ms/op


Result "bench.BenchmarkBestCases.serial":
  0.867 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.865, 0.867, 0.870), stdev = 0.002
  CI (99.9%): [0.859, 0.876] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.serial
# Parameters: (fileName = testCases/BestCase_200.txt)

# Run progress: 27.78% complete, ETA 00:28:31
# Fork: 1 of 1
# Warmup Iteration   1: 3.909 ms/op
# Warmup Iteration   2: 3.452 ms/op
# Warmup Iteration   3: 3.442 ms/op
Iteration   1: 3.467 ms/op
Iteration   2: 3.456 ms/op
Iteration   3: 3.487 ms/op
Iteration   4: 3.442 ms/op
Iteration   5: 3.459 ms/op


Result "bench.BenchmarkBestCases.serial":
  3.463 ±(99.9%) 0.064 ms/op [Average]
  (min, avg, max) = (3.442, 3.463, 3.487), stdev = 0.017
  CI (99.9%): [3.399, 3.526] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.serial
# Parameters: (fileName = testCases/BestCase_1000.txt)

# Run progress: 30.56% complete, ETA 00:27:25
# Fork: 1 of 1
# Warmup Iteration   1: 97.493 ms/op
# Warmup Iteration   2: 87.810 ms/op
# Warmup Iteration   3: 87.983 ms/op
Iteration   1: 87.557 ms/op
Iteration   2: 87.976 ms/op
Iteration   3: 87.679 ms/op
Iteration   4: 87.660 ms/op
Iteration   5: 87.826 ms/op


Result "bench.BenchmarkBestCases.serial":
  87.740 ±(99.9%) 0.628 ms/op [Average]
  (min, avg, max) = (87.557, 87.740, 87.976), stdev = 0.163
  CI (99.9%): [87.111, 88.368] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerCallable
# Parameters: (fileName = testCases/Random_10.txt)

# Run progress: 33.33% complete, ETA 00:26:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.174 ms/op
# Warmup Iteration   2: 0.169 ms/op
# Warmup Iteration   3: 0.174 ms/op
Iteration   1: 0.169 ms/op
Iteration   2: 0.170 ms/op
Iteration   3: 0.168 ms/op
Iteration   4: 0.167 ms/op
Iteration   5: 0.171 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerCallable":
  0.169 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.167, 0.169, 0.171), stdev = 0.002
  CI (99.9%): [0.162, 0.176] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerCallable
# Parameters: (fileName = testCases/Random_100.txt)

# Run progress: 36.11% complete, ETA 00:25:15
# Fork: 1 of 1
# Warmup Iteration   1: 1.133 ms/op
# Warmup Iteration   2: 1.002 ms/op
# Warmup Iteration   3: 1.029 ms/op
Iteration   1: 1.021 ms/op
Iteration   2: 1.005 ms/op
Iteration   3: 1.001 ms/op
Iteration   4: 1.000 ms/op
Iteration   5: 1.014 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerCallable":
  1.008 ±(99.9%) 0.035 ms/op [Average]
  (min, avg, max) = (1.000, 1.008, 1.021), stdev = 0.009
  CI (99.9%): [0.974, 1.043] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerCallable
# Parameters: (fileName = testCases/Random_200.txt)

# Run progress: 38.89% complete, ETA 00:24:09
# Fork: 1 of 1
# Warmup Iteration   1: 4.093 ms/op
# Warmup Iteration   2: 3.769 ms/op
# Warmup Iteration   3: 3.730 ms/op
Iteration   1: 3.752 ms/op
Iteration   2: 3.746 ms/op
Iteration   3: 3.761 ms/op
Iteration   4: 3.765 ms/op
Iteration   5: 3.841 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerCallable":
  3.773 ±(99.9%) 0.150 ms/op [Average]
  (min, avg, max) = (3.746, 3.773, 3.841), stdev = 0.039
  CI (99.9%): [3.623, 3.923] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerCallable
# Parameters: (fileName = testCases/Random_1000.txt)

# Run progress: 41.67% complete, ETA 00:23:02
# Fork: 1 of 1
# Warmup Iteration   1: 96.533 ms/op
# Warmup Iteration   2: 73.075 ms/op
# Warmup Iteration   3: 78.170 ms/op
Iteration   1: 74.974 ms/op
Iteration   2: 74.776 ms/op
Iteration   3: 75.018 ms/op
Iteration   4: 74.236 ms/op
Iteration   5: 73.675 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerCallable":
  74.536 ±(99.9%) 2.207 ms/op [Average]
  (min, avg, max) = (73.675, 74.536, 75.018), stdev = 0.573
  CI (99.9%): [72.329, 76.743] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.parallelGaleShapley
# Parameters: (fileName = testCases/Random_10.txt)

# Run progress: 44.44% complete, ETA 00:21:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.183 ms/op
# Warmup Iteration   2: 0.176 ms/op
# Warmup Iteration   3: 0.180 ms/op
Iteration   1: 0.177 ms/op
Iteration   2: 0.179 ms/op
Iteration   3: 0.176 ms/op
Iteration   4: 0.176 ms/op
Iteration   5: 0.177 ms/op


Result "bench.BenchmarkRandomCases.parallelGaleShapley":
  0.177 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.176, 0.177, 0.179), stdev = 0.001
  CI (99.9%): [0.173, 0.181] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.parallelGaleShapley
# Parameters: (fileName = testCases/Random_100.txt)

# Run progress: 47.22% complete, ETA 00:20:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.417 ms/op
# Warmup Iteration   2: 0.381 ms/op
# Warmup Iteration   3: 0.378 ms/op
Iteration   1: 0.376 ms/op
Iteration   2: 0.379 ms/op
Iteration   3: 0.372 ms/op
Iteration   4: 0.378 ms/op
Iteration   5: 0.374 ms/op


Result "bench.BenchmarkRandomCases.parallelGaleShapley":
  0.376 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.372, 0.376, 0.379), stdev = 0.003
  CI (99.9%): [0.365, 0.387] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.parallelGaleShapley
# Parameters: (fileName = testCases/Random_200.txt)

# Run progress: 50.00% complete, ETA 00:19:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.824 ms/op
# Warmup Iteration   2: 0.735 ms/op
# Warmup Iteration   3: 0.719 ms/op
Iteration   1: 0.717 ms/op
Iteration   2: 0.720 ms/op
Iteration   3: 0.716 ms/op
Iteration   4: 0.734 ms/op
Iteration   5: 0.752 ms/op


Result "bench.BenchmarkRandomCases.parallelGaleShapley":
  0.728 ±(99.9%) 0.059 ms/op [Average]
  (min, avg, max) = (0.716, 0.728, 0.752), stdev = 0.015
  CI (99.9%): [0.669, 0.787] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.parallelGaleShapley
# Parameters: (fileName = testCases/Random_1000.txt)

# Run progress: 52.78% complete, ETA 00:18:39
# Fork: 1 of 1
# Warmup Iteration   1: 4.049 ms/op
# Warmup Iteration   2: 3.757 ms/op
# Warmup Iteration   3: 3.742 ms/op
Iteration   1: 3.824 ms/op
Iteration   2: 3.747 ms/op
Iteration   3: 3.725 ms/op
Iteration   4: 3.745 ms/op
Iteration   5: 3.713 ms/op


Result "bench.BenchmarkRandomCases.parallelGaleShapley":
  3.751 ±(99.9%) 0.168 ms/op [Average]
  (min, avg, max) = (3.713, 3.751, 3.824), stdev = 0.044
  CI (99.9%): [3.583, 3.919] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.serial
# Parameters: (fileName = testCases/Random_10.txt)

# Run progress: 55.56% complete, ETA 00:17:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ms/op
# Warmup Iteration   2: 0.014 ms/op
# Warmup Iteration   3: 0.014 ms/op
Iteration   1: 0.014 ms/op
Iteration   2: 0.014 ms/op
Iteration   3: 0.014 ms/op
Iteration   4: 0.014 ms/op
Iteration   5: 0.014 ms/op


Result "bench.BenchmarkRandomCases.serial":
  0.014 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.014, 0.014, 0.014), stdev = 0.001
  CI (99.9%): [0.014, 0.014] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.serial
# Parameters: (fileName = testCases/Random_100.txt)

# Run progress: 58.33% complete, ETA 00:16:28
# Fork: 1 of 1
# Warmup Iteration   1: 1.379 ms/op
# Warmup Iteration   2: 1.202 ms/op
# Warmup Iteration   3: 1.219 ms/op
Iteration   1: 1.199 ms/op
Iteration   2: 1.198 ms/op
Iteration   3: 1.199 ms/op
Iteration   4: 1.198 ms/op
Iteration   5: 1.198 ms/op


Result "bench.BenchmarkRandomCases.serial":
  1.198 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (1.198, 1.198, 1.199), stdev = 0.001
  CI (99.9%): [1.196, 1.201] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.serial
# Parameters: (fileName = testCases/Random_200.txt)

# Run progress: 61.11% complete, ETA 00:15:22
# Fork: 1 of 1
# Warmup Iteration   1: 6.008 ms/op
# Warmup Iteration   2: 5.355 ms/op
# Warmup Iteration   3: 5.402 ms/op
Iteration   1: 5.388 ms/op
Iteration   2: 5.379 ms/op
Iteration   3: 5.377 ms/op
Iteration   4: 5.455 ms/op
Iteration   5: 5.517 ms/op


Result "bench.BenchmarkRandomCases.serial":
  5.423 ±(99.9%) 0.238 ms/op [Average]
  (min, avg, max) = (5.377, 5.423, 5.517), stdev = 0.062
  CI (99.9%): [5.185, 5.661] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.serial
# Parameters: (fileName = testCases/Random_1000.txt)

# Run progress: 63.89% complete, ETA 00:14:16
# Fork: 1 of 1
# Warmup Iteration   1: 159.789 ms/op
# Warmup Iteration   2: 140.637 ms/op
# Warmup Iteration   3: 143.143 ms/op
Iteration   1: 140.861 ms/op
Iteration   2: 139.167 ms/op
Iteration   3: 139.850 ms/op
Iteration   4: 139.109 ms/op
Iteration   5: 138.828 ms/op


Result "bench.BenchmarkRandomCases.serial":
  139.563 ±(99.9%) 3.146 ms/op [Average]
  (min, avg, max) = (138.828, 139.563, 140.861), stdev = 0.817
  CI (99.9%): [136.417, 142.709] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerCallable
# Parameters: (fileName = testCases/WorstCase_10.txt)

# Run progress: 66.67% complete, ETA 00:13:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.177 ms/op
# Warmup Iteration   2: 0.172 ms/op
# Warmup Iteration   3: 0.173 ms/op
Iteration   1: 0.173 ms/op
Iteration   2: 0.177 ms/op
Iteration   3: 0.177 ms/op
Iteration   4: 0.173 ms/op
Iteration   5: 0.169 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerCallable":
  0.174 ±(99.9%) 0.013 ms/op [Average]
  (min, avg, max) = (0.169, 0.174, 0.177), stdev = 0.003
  CI (99.9%): [0.160, 0.187] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerCallable
# Parameters: (fileName = testCases/WorstCase_100.txt)

# Run progress: 69.44% complete, ETA 00:12:04
# Fork: 1 of 1
# Warmup Iteration   1: 2.204 ms/op
# Warmup Iteration   2: 2.011 ms/op
# Warmup Iteration   3: 1.986 ms/op
Iteration   1: 1.988 ms/op
Iteration   2: 2.002 ms/op
Iteration   3: 2.001 ms/op
Iteration   4: 2.005 ms/op
Iteration   5: 1.998 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerCallable":
  1.999 ±(99.9%) 0.025 ms/op [Average]
  (min, avg, max) = (1.988, 1.999, 2.005), stdev = 0.006
  CI (99.9%): [1.974, 2.023] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerCallable
# Parameters: (fileName = testCases/WorstCase_200.txt)

# Run progress: 72.22% complete, ETA 00:10:58
# Fork: 1 of 1
# Warmup Iteration   1: 9.181 ms/op
# Warmup Iteration   2: 8.657 ms/op
# Warmup Iteration   3: 8.847 ms/op
Iteration   1: 8.634 ms/op
Iteration   2: 8.515 ms/op
Iteration   3: 8.652 ms/op
Iteration   4: 8.472 ms/op
Iteration   5: 8.523 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerCallable":
  8.559 ±(99.9%) 0.304 ms/op [Average]
  (min, avg, max) = (8.472, 8.559, 8.652), stdev = 0.079
  CI (99.9%): [8.255, 8.863] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerCallable
# Parameters: (fileName = testCases/WorstCase_1000.txt)

# Run progress: 75.00% complete, ETA 00:09:52
# Fork: 1 of 1
# Warmup Iteration   1: 486.949 ms/op
# Warmup Iteration   2: 398.767 ms/op
# Warmup Iteration   3: 405.489 ms/op
Iteration   1: 402.393 ms/op
Iteration   2: 403.378 ms/op
Iteration   3: 402.819 ms/op
Iteration   4: 398.248 ms/op
Iteration   5: 401.888 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerCallable":
  401.745 ±(99.9%) 7.819 ms/op [Average]
  (min, avg, max) = (398.248, 401.745, 403.378), stdev = 2.030
  CI (99.9%): [393.927, 409.564] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.parallelGaleShapley
# Parameters: (fileName = testCases/WorstCase_10.txt)

# Run progress: 77.78% complete, ETA 00:08:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.183 ms/op
# Warmup Iteration   2: 0.173 ms/op
# Warmup Iteration   3: 0.177 ms/op
Iteration   1: 0.174 ms/op
Iteration   2: 0.178 ms/op
Iteration   3: 0.174 ms/op
Iteration   4: 0.180 ms/op
Iteration   5: 0.176 ms/op


Result "bench.BenchmarkWorstCases.parallelGaleShapley":
  0.176 ±(99.9%) 0.010 ms/op [Average]
  (min, avg, max) = (0.174, 0.176, 0.180), stdev = 0.003
  CI (99.9%): [0.166, 0.187] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.parallelGaleShapley
# Parameters: (fileName = testCases/WorstCase_100.txt)

# Run progress: 80.56% complete, ETA 00:07:41
# Fork: 1 of 1
# Warmup Iteration   1: 1.182 ms/op
# Warmup Iteration   2: 1.074 ms/op
# Warmup Iteration   3: 1.081 ms/op
Iteration   1: 1.084 ms/op
Iteration   2: 1.079 ms/op
Iteration   3: 1.084 ms/op
Iteration   4: 1.079 ms/op
Iteration   5: 1.082 ms/op


Result "bench.BenchmarkWorstCases.parallelGaleShapley":
  1.082 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (1.079, 1.082, 1.084), stdev = 0.002
  CI (99.9%): [1.073, 1.091] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.parallelGaleShapley
# Parameters: (fileName = testCases/WorstCase_200.txt)

# Run progress: 83.33% complete, ETA 00:06:35
# Fork: 1 of 1
# Warmup Iteration   1: 5.661 ms/op
# Warmup Iteration   2: 5.518 ms/op
# Warmup Iteration   3: 5.517 ms/op
Iteration   1: 5.585 ms/op
Iteration   2: 5.614 ms/op
Iteration   3: 5.577 ms/op
Iteration   4: 5.564 ms/op
Iteration   5: 5.538 ms/op


Result "bench.BenchmarkWorstCases.parallelGaleShapley":
  5.576 ±(99.9%) 0.106 ms/op [Average]
  (min, avg, max) = (5.538, 5.576, 5.614), stdev = 0.028
  CI (99.9%): [5.469, 5.682] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.parallelGaleShapley
# Parameters: (fileName = testCases/WorstCase_1000.txt)

# Run progress: 86.11% complete, ETA 00:05:29
# Fork: 1 of 1
# Warmup Iteration   1: 496.455 ms/op
# Warmup Iteration   2: 488.426 ms/op
# Warmup Iteration   3: 513.719 ms/op
Iteration   1: 473.232 ms/op
Iteration   2: 492.547 ms/op
Iteration   3: 488.647 ms/op
Iteration   4: 476.332 ms/op
Iteration   5: 483.992 ms/op


Result "bench.BenchmarkWorstCases.parallelGaleShapley":
  482.950 ±(99.9%) 31.277 ms/op [Average]
  (min, avg, max) = (473.232, 482.950, 492.547), stdev = 8.122
  CI (99.9%): [451.673, 514.227] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.serial
# Parameters: (fileName = testCases/WorstCase_10.txt)

# Run progress: 88.89% complete, ETA 00:04:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.027 ms/op
# Warmup Iteration   2: 0.022 ms/op
# Warmup Iteration   3: 0.022 ms/op
Iteration   1: 0.022 ms/op
Iteration   2: 0.022 ms/op
Iteration   3: 0.022 ms/op
Iteration   4: 0.022 ms/op
Iteration   5: 0.022 ms/op


Result "bench.BenchmarkWorstCases.serial":
  0.022 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.022, 0.022, 0.022), stdev = 0.001
  CI (99.9%): [0.022, 0.022] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.serial
# Parameters: (fileName = testCases/WorstCase_100.txt)

# Run progress: 91.67% complete, ETA 00:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 6.761 ms/op
# Warmup Iteration   2: 6.506 ms/op
# Warmup Iteration   3: 6.489 ms/op
Iteration   1: 6.558 ms/op
Iteration   2: 6.529 ms/op
Iteration   3: 6.681 ms/op
Iteration   4: 6.621 ms/op
Iteration   5: 6.585 ms/op


Result "bench.BenchmarkWorstCases.serial":
  6.595 ±(99.9%) 0.227 ms/op [Average]
  (min, avg, max) = (6.529, 6.595, 6.681), stdev = 0.059
  CI (99.9%): [6.367, 6.822] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.serial
# Parameters: (fileName = testCases/WorstCase_200.txt)

# Run progress: 94.44% complete, ETA 00:02:11
# Fork: 1 of 1
# Warmup Iteration   1: 46.440 ms/op
# Warmup Iteration   2: 43.470 ms/op
# Warmup Iteration   3: 43.750 ms/op
Iteration   1: 43.556 ms/op
Iteration   2: 43.669 ms/op
Iteration   3: 43.632 ms/op
Iteration   4: 43.728 ms/op
Iteration   5: 43.351 ms/op


Result "bench.BenchmarkWorstCases.serial":
  43.587 ±(99.9%) 0.563 ms/op [Average]
  (min, avg, max) = (43.351, 43.587, 43.728), stdev = 0.146
  CI (99.9%): [43.025, 44.150] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -javaagent:/lib/idea_rt.jar=41067:/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.serial
# Parameters: (fileName = testCases/WorstCase_1000.txt)

# Run progress: 97.22% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: 9495.073 ms/op
# Warmup Iteration   2: 7825.707 ms/op
# Warmup Iteration   3: 9810.876 ms/op
Iteration   1: 8458.775 ms/op
Iteration   2: 9675.440 ms/op
Iteration   3: 8858.835 ms/op
Iteration   4: 9568.547 ms/op
Iteration   5: 7353.337 ms/op


Result "bench.BenchmarkWorstCases.serial":
  8782.987 ±(99.9%) 3636.943 ms/op [Average]
  (min, avg, max) = (7353.337, 8782.987, 9675.440), stdev = 944.503
  CI (99.9%): [5146.043, 12419.930] (assumes normal distribution)


# Run complete. Total time: 00:40:25

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                        (fileName)  Mode  Cnt     Score      Error  Units
BenchmarkBestCases.divideAndConquerCallable       testCases/BestCase_10.txt  avgt    5     0.168 ±    0.003  ms/op
BenchmarkBestCases.divideAndConquerCallable      testCases/BestCase_100.txt  avgt    5     0.691 ±    0.007  ms/op
BenchmarkBestCases.divideAndConquerCallable      testCases/BestCase_200.txt  avgt    5     2.153 ±    0.034  ms/op
BenchmarkBestCases.divideAndConquerCallable     testCases/BestCase_1000.txt  avgt    5    43.971 ±    0.752  ms/op
BenchmarkBestCases.parallelGaleShapley            testCases/BestCase_10.txt  avgt    5     0.176 ±    0.011  ms/op
BenchmarkBestCases.parallelGaleShapley           testCases/BestCase_100.txt  avgt    5     0.379 ±    0.013  ms/op
BenchmarkBestCases.parallelGaleShapley           testCases/BestCase_200.txt  avgt    5     0.564 ±    0.022  ms/op
BenchmarkBestCases.parallelGaleShapley          testCases/BestCase_1000.txt  avgt    5     2.115 ±    0.023  ms/op
BenchmarkBestCases.serial                         testCases/BestCase_10.txt  avgt    5     0.011 ±    0.001  ms/op
BenchmarkBestCases.serial                        testCases/BestCase_100.txt  avgt    5     0.867 ±    0.009  ms/op
BenchmarkBestCases.serial                        testCases/BestCase_200.txt  avgt    5     3.463 ±    0.064  ms/op
BenchmarkBestCases.serial                       testCases/BestCase_1000.txt  avgt    5    87.740 ±    0.628  ms/op
BenchmarkRandomCases.divideAndConquerCallable       testCases/Random_10.txt  avgt    5     0.169 ±    0.007  ms/op
BenchmarkRandomCases.divideAndConquerCallable      testCases/Random_100.txt  avgt    5     1.008 ±    0.035  ms/op
BenchmarkRandomCases.divideAndConquerCallable      testCases/Random_200.txt  avgt    5     3.773 ±    0.150  ms/op
BenchmarkRandomCases.divideAndConquerCallable     testCases/Random_1000.txt  avgt    5    74.536 ±    2.207  ms/op
BenchmarkRandomCases.parallelGaleShapley            testCases/Random_10.txt  avgt    5     0.177 ±    0.004  ms/op
BenchmarkRandomCases.parallelGaleShapley           testCases/Random_100.txt  avgt    5     0.376 ±    0.011  ms/op
BenchmarkRandomCases.parallelGaleShapley           testCases/Random_200.txt  avgt    5     0.728 ±    0.059  ms/op
BenchmarkRandomCases.parallelGaleShapley          testCases/Random_1000.txt  avgt    5     3.751 ±    0.168  ms/op
BenchmarkRandomCases.serial                         testCases/Random_10.txt  avgt    5     0.014 ±    0.001  ms/op
BenchmarkRandomCases.serial                        testCases/Random_100.txt  avgt    5     1.198 ±    0.003  ms/op
BenchmarkRandomCases.serial                        testCases/Random_200.txt  avgt    5     5.423 ±    0.238  ms/op
BenchmarkRandomCases.serial                       testCases/Random_1000.txt  avgt    5   139.563 ±    3.146  ms/op
BenchmarkWorstCases.divideAndConquerCallable     testCases/WorstCase_10.txt  avgt    5     0.174 ±    0.013  ms/op
BenchmarkWorstCases.divideAndConquerCallable    testCases/WorstCase_100.txt  avgt    5     1.999 ±    0.025  ms/op
BenchmarkWorstCases.divideAndConquerCallable    testCases/WorstCase_200.txt  avgt    5     8.559 ±    0.304  ms/op
BenchmarkWorstCases.divideAndConquerCallable   testCases/WorstCase_1000.txt  avgt    5   401.745 ±    7.819  ms/op
BenchmarkWorstCases.parallelGaleShapley          testCases/WorstCase_10.txt  avgt    5     0.176 ±    0.010  ms/op
BenchmarkWorstCases.parallelGaleShapley         testCases/WorstCase_100.txt  avgt    5     1.082 ±    0.009  ms/op
BenchmarkWorstCases.parallelGaleShapley         testCases/WorstCase_200.txt  avgt    5     5.576 ±    0.106  ms/op
BenchmarkWorstCases.parallelGaleShapley        testCases/WorstCase_1000.txt  avgt    5   482.950 ±   31.277  ms/op
BenchmarkWorstCases.serial                       testCases/WorstCase_10.txt  avgt    5     0.022 ±    0.001  ms/op
BenchmarkWorstCases.serial                      testCases/WorstCase_100.txt  avgt    5     6.595 ±    0.227  ms/op
BenchmarkWorstCases.serial                      testCases/WorstCase_200.txt  avgt    5    43.587 ±    0.563  ms/op
BenchmarkWorstCases.serial                     testCases/WorstCase_1000.txt  avgt    5  8782.987 ± 3636.943  ms/op

Process finished with exit code 0
