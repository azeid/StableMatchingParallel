# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerCallable
# Parameters: (fileName = testCases/BestCase_10.txt)

# Run progress: 0.00% complete, ETA 01:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.227 ms/op
# Warmup Iteration   2: 0.208 ms/op
# Warmup Iteration   3: 0.206 ms/op
Iteration   1: 0.209 ms/op
Iteration   2: 0.213 ms/op
Iteration   3: 0.212 ms/op
Iteration   4: 0.224 ms/op
Iteration   5: 0.227 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerCallable":
  0.217 ±(99.9%) 0.030 ms/op [Average]
  (min, avg, max) = (0.209, 0.217, 0.227), stdev = 0.008
  CI (99.9%): [0.187, 0.247] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerCallable
# Parameters: (fileName = testCases/BestCase_100.txt)

# Run progress: 1.67% complete, ETA 01:04:33
# Fork: 1 of 1
# Warmup Iteration   1: 1.974 ms/op
# Warmup Iteration   2: 1.705 ms/op
# Warmup Iteration   3: 0.800 ms/op
Iteration   1: 0.778 ms/op
Iteration   2: 0.765 ms/op
Iteration   3: 0.741 ms/op
Iteration   4: 0.741 ms/op
Iteration   5: 0.741 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerCallable":
  0.753 ±(99.9%) 0.066 ms/op [Average]
  (min, avg, max) = (0.741, 0.753, 0.778), stdev = 0.017
  CI (99.9%): [0.687, 0.819] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerCallable
# Parameters: (fileName = testCases/BestCase_200.txt)

# Run progress: 3.33% complete, ETA 01:03:31
# Fork: 1 of 1
# Warmup Iteration   1: 2.476 ms/op
# Warmup Iteration   2: 2.069 ms/op
# Warmup Iteration   3: 2.032 ms/op
Iteration   1: 2.048 ms/op
Iteration   2: 2.060 ms/op
Iteration   3: 2.011 ms/op
Iteration   4: 2.016 ms/op
Iteration   5: 2.052 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerCallable":
  2.037 ±(99.9%) 0.085 ms/op [Average]
  (min, avg, max) = (2.011, 2.037, 2.060), stdev = 0.022
  CI (99.9%): [1.952, 2.122] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerCallable
# Parameters: (fileName = testCases/BestCase_1000.txt)

# Run progress: 5.00% complete, ETA 01:02:28
# Fork: 1 of 1
# Warmup Iteration   1: 45.150 ms/op
# Warmup Iteration   2: 40.834 ms/op
# Warmup Iteration   3: 40.993 ms/op
Iteration   1: 41.059 ms/op
Iteration   2: 40.532 ms/op
Iteration   3: 41.171 ms/op
Iteration   4: 41.135 ms/op
Iteration   5: 41.340 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerCallable":
  41.047 ±(99.9%) 1.178 ms/op [Average]
  (min, avg, max) = (40.532, 41.047, 41.340), stdev = 0.306
  CI (99.9%): [39.869, 42.225] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/BestCase_10.txt)

# Run progress: 6.67% complete, ETA 01:01:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.472 ms/op
# Warmup Iteration   2: 0.452 ms/op
# Warmup Iteration   3: 0.463 ms/op
Iteration   1: 0.463 ms/op
Iteration   2: 0.474 ms/op
Iteration   3: 0.457 ms/op
Iteration   4: 0.455 ms/op
Iteration   5: 0.465 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerRunnable":
  0.463 ±(99.9%) 0.029 ms/op [Average]
  (min, avg, max) = (0.455, 0.463, 0.474), stdev = 0.007
  CI (99.9%): [0.434, 0.492] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/BestCase_100.txt)

# Run progress: 8.33% complete, ETA 01:00:26
# Fork: 1 of 1
# Warmup Iteration   1: 2.142 ms/op
# Warmup Iteration   2: 1.980 ms/op
# Warmup Iteration   3: 1.954 ms/op
Iteration   1: 1.934 ms/op
Iteration   2: 1.970 ms/op
Iteration   3: 1.987 ms/op
Iteration   4: 2.012 ms/op
Iteration   5: 2.018 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerRunnable":
  1.984 ±(99.9%) 0.131 ms/op [Average]
  (min, avg, max) = (1.934, 1.984, 2.018), stdev = 0.034
  CI (99.9%): [1.853, 2.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/BestCase_200.txt)

# Run progress: 10.00% complete, ETA 00:59:18
# Fork: 1 of 1
# Warmup Iteration   1: 4.252 ms/op
# Warmup Iteration   2: 3.864 ms/op
# Warmup Iteration   3: 3.917 ms/op
Iteration   1: 3.944 ms/op
Iteration   2: 3.904 ms/op
Iteration   3: 3.938 ms/op
Iteration   4: 3.984 ms/op
Iteration   5: 3.905 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerRunnable":
  3.935 ±(99.9%) 0.127 ms/op [Average]
  (min, avg, max) = (3.904, 3.935, 3.984), stdev = 0.033
  CI (99.9%): [3.808, 4.062] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/BestCase_1000.txt)

# Run progress: 11.67% complete, ETA 00:58:11
# Fork: 1 of 1
# Warmup Iteration   1: 62.261 ms/op
# Warmup Iteration   2: 58.837 ms/op
# Warmup Iteration   3: 63.843 ms/op
Iteration   1: 65.537 ms/op
Iteration   2: 59.289 ms/op
Iteration   3: 60.198 ms/op
Iteration   4: 58.328 ms/op
Iteration   5: 60.059 ms/op


Result "bench.BenchmarkBestCases.divideAndConquerRunnable":
  60.682 ±(99.9%) 10.836 ms/op [Average]
  (min, avg, max) = (58.328, 60.682, 65.537), stdev = 2.814
  CI (99.9%): [49.846, 71.518] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.masterSlaveCallable
# Parameters: (fileName = testCases/BestCase_10.txt)

# Run progress: 13.33% complete, ETA 00:57:11
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 10
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkBestCases.masterSlaveCallable(BenchmarkBestCases.java:57)
	at bench.generated.BenchmarkBestCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkBestCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkBestCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkBestCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.masterSlaveCallable
# Parameters: (fileName = testCases/BestCase_100.txt)

# Run progress: 15.00% complete, ETA 00:49:54
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 100
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkBestCases.masterSlaveCallable(BenchmarkBestCases.java:57)
	at bench.generated.BenchmarkBestCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkBestCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkBestCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkBestCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.masterSlaveCallable
# Parameters: (fileName = testCases/BestCase_200.txt)

# Run progress: 16.67% complete, ETA 00:44:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 200
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkBestCases.masterSlaveCallable(BenchmarkBestCases.java:57)
	at bench.generated.BenchmarkBestCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkBestCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkBestCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkBestCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.masterSlaveCallable
# Parameters: (fileName = testCases/BestCase_1000.txt)

# Run progress: 18.33% complete, ETA 00:39:36
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 1000
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkBestCases.masterSlaveCallable(BenchmarkBestCases.java:57)
	at bench.generated.BenchmarkBestCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkBestCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkBestCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkBestCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.parallelGaleShapley
# Parameters: (fileName = testCases/BestCase_10.txt)

# Run progress: 20.00% complete, ETA 00:41:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.250 ms/op
# Warmup Iteration   2: 0.237 ms/op
# Warmup Iteration   3: 0.233 ms/op
Iteration   1: 0.234 ms/op
Iteration   2: 0.235 ms/op
Iteration   3: 0.235 ms/op
Iteration   4: 0.236 ms/op
Iteration   5: 0.232 ms/op


Result "bench.BenchmarkBestCases.parallelGaleShapley":
  0.234 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.232, 0.234, 0.236), stdev = 0.002
  CI (99.9%): [0.228, 0.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.parallelGaleShapley
# Parameters: (fileName = testCases/BestCase_100.txt)

# Run progress: 21.67% complete, ETA 00:41:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.452 ms/op
# Warmup Iteration   2: 0.400 ms/op
# Warmup Iteration   3: 0.396 ms/op
Iteration   1: 0.400 ms/op
Iteration   2: 0.401 ms/op
Iteration   3: 0.397 ms/op
Iteration   4: 0.401 ms/op
Iteration   5: 0.402 ms/op


Result "bench.BenchmarkBestCases.parallelGaleShapley":
  0.400 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.397, 0.400, 0.402), stdev = 0.002
  CI (99.9%): [0.394, 0.407] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.parallelGaleShapley
# Parameters: (fileName = testCases/BestCase_200.txt)

# Run progress: 23.33% complete, ETA 00:40:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.595 ms/op
# Warmup Iteration   2: 0.530 ms/op
# Warmup Iteration   3: 0.543 ms/op
Iteration   1: 0.534 ms/op
Iteration   2: 0.524 ms/op
Iteration   3: 0.525 ms/op
Iteration   4: 0.523 ms/op
Iteration   5: 0.525 ms/op


Result "bench.BenchmarkBestCases.parallelGaleShapley":
  0.526 ±(99.9%) 0.016 ms/op [Average]
  (min, avg, max) = (0.523, 0.526, 0.534), stdev = 0.004
  CI (99.9%): [0.510, 0.543] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.parallelGaleShapley
# Parameters: (fileName = testCases/BestCase_1000.txt)

# Run progress: 25.00% complete, ETA 00:40:38
# Fork: 1 of 1
# Warmup Iteration   1: 1.806 ms/op
# Warmup Iteration   2: 1.699 ms/op
# Warmup Iteration   3: 1.668 ms/op
Iteration   1: 1.618 ms/op
Iteration   2: 1.667 ms/op
Iteration   3: 1.634 ms/op
Iteration   4: 1.620 ms/op
Iteration   5: 1.647 ms/op


Result "bench.BenchmarkBestCases.parallelGaleShapley":
  1.637 ±(99.9%) 0.078 ms/op [Average]
  (min, avg, max) = (1.618, 1.637, 1.667), stdev = 0.020
  CI (99.9%): [1.559, 1.716] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.serial
# Parameters: (fileName = testCases/BestCase_10.txt)

# Run progress: 26.67% complete, ETA 00:40:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.012 ms/op
# Warmup Iteration   2: 0.011 ms/op
# Warmup Iteration   3: 0.011 ms/op
Iteration   1: 0.011 ms/op
Iteration   2: 0.011 ms/op
Iteration   3: 0.011 ms/op
Iteration   4: 0.011 ms/op
Iteration   5: 0.011 ms/op


Result "bench.BenchmarkBestCases.serial":
  0.011 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.011, 0.011, 0.011), stdev = 0.001
  CI (99.9%): [0.011, 0.011] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.serial
# Parameters: (fileName = testCases/BestCase_100.txt)

# Run progress: 28.33% complete, ETA 00:39:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.946 ms/op
# Warmup Iteration   2: 0.837 ms/op
# Warmup Iteration   3: 0.845 ms/op
Iteration   1: 0.842 ms/op
Iteration   2: 0.844 ms/op
Iteration   3: 0.845 ms/op
Iteration   4: 0.845 ms/op
Iteration   5: 0.843 ms/op


Result "bench.BenchmarkBestCases.serial":
  0.844 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.842, 0.844, 0.845), stdev = 0.001
  CI (99.9%): [0.839, 0.848] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.serial
# Parameters: (fileName = testCases/BestCase_200.txt)

# Run progress: 30.00% complete, ETA 00:39:18
# Fork: 1 of 1
# Warmup Iteration   1: 3.720 ms/op
# Warmup Iteration   2: 3.419 ms/op
# Warmup Iteration   3: 3.437 ms/op
Iteration   1: 3.440 ms/op
Iteration   2: 3.434 ms/op
Iteration   3: 3.440 ms/op
Iteration   4: 3.454 ms/op
Iteration   5: 3.459 ms/op


Result "bench.BenchmarkBestCases.serial":
  3.445 ±(99.9%) 0.041 ms/op [Average]
  (min, avg, max) = (3.434, 3.445, 3.459), stdev = 0.011
  CI (99.9%): [3.404, 3.487] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkBestCases.serial
# Parameters: (fileName = testCases/BestCase_1000.txt)

# Run progress: 31.67% complete, ETA 00:38:42
# Fork: 1 of 1
# Warmup Iteration   1: 104.739 ms/op
# Warmup Iteration   2: 93.783 ms/op
# Warmup Iteration   3: 94.835 ms/op
Iteration   1: 91.460 ms/op
Iteration   2: 91.514 ms/op
Iteration   3: 91.500 ms/op
Iteration   4: 90.833 ms/op
Iteration   5: 91.667 ms/op


Result "bench.BenchmarkBestCases.serial":
  91.395 ±(99.9%) 1.247 ms/op [Average]
  (min, avg, max) = (90.833, 91.395, 91.667), stdev = 0.324
  CI (99.9%): [90.148, 92.641] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerCallable
# Parameters: (fileName = testCases/Random_10.txt)

# Run progress: 33.33% complete, ETA 00:38:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.220 ms/op
# Warmup Iteration   2: 0.207 ms/op
# Warmup Iteration   3: 0.210 ms/op
Iteration   1: 0.208 ms/op
Iteration   2: 0.209 ms/op
Iteration   3: 0.207 ms/op
Iteration   4: 0.208 ms/op
Iteration   5: 0.210 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerCallable":
  0.208 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.207, 0.208, 0.210), stdev = 0.001
  CI (99.9%): [0.204, 0.213] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerCallable
# Parameters: (fileName = testCases/Random_100.txt)

# Run progress: 35.00% complete, ETA 00:37:25
# Fork: 1 of 1
# Warmup Iteration   1: 1.091 ms/op
# Warmup Iteration   2: 0.980 ms/op
# Warmup Iteration   3: 0.983 ms/op
Iteration   1: 0.984 ms/op
Iteration   2: 0.989 ms/op
Iteration   3: 0.984 ms/op
Iteration   4: 0.986 ms/op
Iteration   5: 0.993 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerCallable":
  0.987 ±(99.9%) 0.015 ms/op [Average]
  (min, avg, max) = (0.984, 0.987, 0.993), stdev = 0.004
  CI (99.9%): [0.972, 1.002] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerCallable
# Parameters: (fileName = testCases/Random_200.txt)

# Run progress: 36.67% complete, ETA 00:36:41
# Fork: 1 of 1
# Warmup Iteration   1: 3.955 ms/op
# Warmup Iteration   2: 3.633 ms/op
# Warmup Iteration   3: 3.582 ms/op
Iteration   1: 3.572 ms/op
Iteration   2: 3.636 ms/op
Iteration   3: 3.638 ms/op
Iteration   4: 3.624 ms/op
Iteration   5: 3.643 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerCallable":
  3.623 ±(99.9%) 0.113 ms/op [Average]
  (min, avg, max) = (3.572, 3.623, 3.643), stdev = 0.029
  CI (99.9%): [3.510, 3.736] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerCallable
# Parameters: (fileName = testCases/Random_1000.txt)

# Run progress: 38.33% complete, ETA 00:35:56
# Fork: 1 of 1
# Warmup Iteration   1: 77.133 ms/op
# Warmup Iteration   2: 65.909 ms/op
# Warmup Iteration   3: 65.601 ms/op
Iteration   1: 69.131 ms/op
Iteration   2: 68.301 ms/op
Iteration   3: 68.153 ms/op
Iteration   4: 67.829 ms/op
Iteration   5: 68.484 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerCallable":
  68.379 ±(99.9%) 1.863 ms/op [Average]
  (min, avg, max) = (67.829, 68.379, 69.131), stdev = 0.484
  CI (99.9%): [66.517, 70.242] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/Random_10.txt)

# Run progress: 40.00% complete, ETA 00:35:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.487 ms/op
# Warmup Iteration   2: 0.465 ms/op
# Warmup Iteration   3: 0.472 ms/op
Iteration   1: 0.494 ms/op
Iteration   2: 0.481 ms/op
Iteration   3: 0.480 ms/op
Iteration   4: 0.461 ms/op
Iteration   5: 0.464 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerRunnable":
  0.476 ±(99.9%) 0.052 ms/op [Average]
  (min, avg, max) = (0.461, 0.476, 0.494), stdev = 0.014
  CI (99.9%): [0.424, 0.528] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/Random_100.txt)

# Run progress: 41.67% complete, ETA 00:34:21
# Fork: 1 of 1
# Warmup Iteration   1: 2.348 ms/op
# Warmup Iteration   2: 2.141 ms/op
# Warmup Iteration   3: 2.142 ms/op
Iteration   1: 2.173 ms/op
Iteration   2: 2.195 ms/op
Iteration   3: 2.181 ms/op
Iteration   4: 2.185 ms/op
Iteration   5: 2.187 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerRunnable":
  2.184 ±(99.9%) 0.031 ms/op [Average]
  (min, avg, max) = (2.173, 2.184, 2.195), stdev = 0.008
  CI (99.9%): [2.154, 2.215] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/Random_200.txt)

# Run progress: 43.33% complete, ETA 00:33:31
# Fork: 1 of 1
# Warmup Iteration   1: 6.024 ms/op
# Warmup Iteration   2: 5.342 ms/op
# Warmup Iteration   3: 5.417 ms/op
Iteration   1: 5.458 ms/op
Iteration   2: 5.439 ms/op
Iteration   3: 5.444 ms/op
Iteration   4: 5.446 ms/op
Iteration   5: 5.569 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerRunnable":
  5.471 ±(99.9%) 0.212 ms/op [Average]
  (min, avg, max) = (5.439, 5.471, 5.569), stdev = 0.055
  CI (99.9%): [5.259, 5.683] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/Random_1000.txt)

# Run progress: 45.00% complete, ETA 00:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 96.645 ms/op
# Warmup Iteration   2: 85.360 ms/op
# Warmup Iteration   3: 93.030 ms/op
Iteration   1: 89.745 ms/op
Iteration   2: 100.810 ms/op
Iteration   3: 85.493 ms/op
Iteration   4: 86.343 ms/op
Iteration   5: 93.894 ms/op


Result "bench.BenchmarkRandomCases.divideAndConquerRunnable":
  91.257 ±(99.9%) 24.190 ms/op [Average]
  (min, avg, max) = (85.493, 91.257, 100.810), stdev = 6.282
  CI (99.9%): [67.066, 115.447] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.masterSlaveCallable
# Parameters: (fileName = testCases/Random_10.txt)

# Run progress: 46.67% complete, ETA 00:31:49
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 10
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkRandomCases.masterSlaveCallable(BenchmarkRandomCases.java:57)
	at bench.generated.BenchmarkRandomCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkRandomCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkRandomCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkRandomCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.masterSlaveCallable
# Parameters: (fileName = testCases/Random_100.txt)

# Run progress: 48.33% complete, ETA 00:29:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 100
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkRandomCases.masterSlaveCallable(BenchmarkRandomCases.java:57)
	at bench.generated.BenchmarkRandomCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkRandomCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkRandomCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkRandomCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.masterSlaveCallable
# Parameters: (fileName = testCases/Random_200.txt)

# Run progress: 50.00% complete, ETA 00:27:52
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 200
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkRandomCases.masterSlaveCallable(BenchmarkRandomCases.java:57)
	at bench.generated.BenchmarkRandomCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkRandomCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkRandomCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkRandomCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.masterSlaveCallable
# Parameters: (fileName = testCases/Random_1000.txt)

# Run progress: 51.67% complete, ETA 00:26:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 1000
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkRandomCases.masterSlaveCallable(BenchmarkRandomCases.java:57)
	at bench.generated.BenchmarkRandomCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkRandomCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkRandomCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkRandomCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.parallelGaleShapley
# Parameters: (fileName = testCases/Random_10.txt)

# Run progress: 53.33% complete, ETA 00:25:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.247 ms/op
# Warmup Iteration   2: 0.232 ms/op
# Warmup Iteration   3: 0.232 ms/op
Iteration   1: 0.232 ms/op
Iteration   2: 0.232 ms/op
Iteration   3: 0.233 ms/op
Iteration   4: 0.236 ms/op
Iteration   5: 0.230 ms/op


Result "bench.BenchmarkRandomCases.parallelGaleShapley":
  0.232 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.230, 0.232, 0.236), stdev = 0.002
  CI (99.9%): [0.224, 0.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.parallelGaleShapley
# Parameters: (fileName = testCases/Random_100.txt)

# Run progress: 55.00% complete, ETA 00:24:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.450 ms/op
# Warmup Iteration   2: 0.403 ms/op
# Warmup Iteration   3: 0.399 ms/op
Iteration   1: 0.398 ms/op
Iteration   2: 0.398 ms/op
Iteration   3: 0.402 ms/op
Iteration   4: 0.400 ms/op
Iteration   5: 0.398 ms/op


Result "bench.BenchmarkRandomCases.parallelGaleShapley":
  0.399 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (0.398, 0.399, 0.402), stdev = 0.002
  CI (99.9%): [0.393, 0.406] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.parallelGaleShapley
# Parameters: (fileName = testCases/Random_200.txt)

# Run progress: 56.67% complete, ETA 00:23:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.639 ms/op
# Warmup Iteration   2: 0.573 ms/op
# Warmup Iteration   3: 0.570 ms/op
Iteration   1: 0.568 ms/op
Iteration   2: 0.569 ms/op
Iteration   3: 0.575 ms/op
Iteration   4: 0.569 ms/op
Iteration   5: 0.571 ms/op


Result "bench.BenchmarkRandomCases.parallelGaleShapley":
  0.570 ±(99.9%) 0.011 ms/op [Average]
  (min, avg, max) = (0.568, 0.570, 0.575), stdev = 0.003
  CI (99.9%): [0.559, 0.582] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.parallelGaleShapley
# Parameters: (fileName = testCases/Random_1000.txt)

# Run progress: 58.33% complete, ETA 00:22:48
# Fork: 1 of 1
# Warmup Iteration   1: 2.650 ms/op
# Warmup Iteration   2: 2.515 ms/op
# Warmup Iteration   3: 2.495 ms/op
Iteration   1: 2.500 ms/op
Iteration   2: 2.500 ms/op
Iteration   3: 2.504 ms/op
Iteration   4: 2.488 ms/op
Iteration   5: 2.494 ms/op


Result "bench.BenchmarkRandomCases.parallelGaleShapley":
  2.497 ±(99.9%) 0.025 ms/op [Average]
  (min, avg, max) = (2.488, 2.497, 2.504), stdev = 0.006
  CI (99.9%): [2.473, 2.522] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.serial
# Parameters: (fileName = testCases/Random_10.txt)

# Run progress: 60.00% complete, ETA 00:22:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.015 ms/op
# Warmup Iteration   2: 0.012 ms/op
# Warmup Iteration   3: 0.013 ms/op
Iteration   1: 0.013 ms/op
Iteration   2: 0.013 ms/op
Iteration   3: 0.013 ms/op
Iteration   4: 0.013 ms/op
Iteration   5: 0.013 ms/op


Result "bench.BenchmarkRandomCases.serial":
  0.013 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.013, 0.013, 0.013), stdev = 0.001
  CI (99.9%): [0.013, 0.013] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.serial
# Parameters: (fileName = testCases/Random_100.txt)

# Run progress: 61.67% complete, ETA 00:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 1.206 ms/op
# Warmup Iteration   2: 1.062 ms/op
# Warmup Iteration   3: 1.069 ms/op
Iteration   1: 1.070 ms/op
Iteration   2: 1.079 ms/op
Iteration   3: 1.065 ms/op
Iteration   4: 1.070 ms/op
Iteration   5: 1.075 ms/op


Result "bench.BenchmarkRandomCases.serial":
  1.072 ±(99.9%) 0.021 ms/op [Average]
  (min, avg, max) = (1.065, 1.072, 1.079), stdev = 0.006
  CI (99.9%): [1.051, 1.093] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.serial
# Parameters: (fileName = testCases/Random_200.txt)

# Run progress: 63.33% complete, ETA 00:20:24
# Fork: 1 of 1
# Warmup Iteration   1: 5.545 ms/op
# Warmup Iteration   2: 5.084 ms/op
# Warmup Iteration   3: 5.111 ms/op
Iteration   1: 5.124 ms/op
Iteration   2: 5.117 ms/op
Iteration   3: 5.108 ms/op
Iteration   4: 5.119 ms/op
Iteration   5: 5.119 ms/op


Result "bench.BenchmarkRandomCases.serial":
  5.117 ±(99.9%) 0.023 ms/op [Average]
  (min, avg, max) = (5.108, 5.117, 5.124), stdev = 0.006
  CI (99.9%): [5.094, 5.141] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkRandomCases.serial
# Parameters: (fileName = testCases/Random_1000.txt)

# Run progress: 65.00% complete, ETA 00:19:33
# Fork: 1 of 1
# Warmup Iteration   1: 189.593 ms/op
# Warmup Iteration   2: 151.634 ms/op
# Warmup Iteration   3: 149.557 ms/op
Iteration   1: 150.954 ms/op
Iteration   2: 150.355 ms/op
Iteration   3: 150.284 ms/op
Iteration   4: 150.835 ms/op
Iteration   5: 149.682 ms/op


Result "bench.BenchmarkRandomCases.serial":
  150.422 ±(99.9%) 1.949 ms/op [Average]
  (min, avg, max) = (149.682, 150.422, 150.954), stdev = 0.506
  CI (99.9%): [148.473, 152.371] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerCallable
# Parameters: (fileName = testCases/WorstCase_10.txt)

# Run progress: 66.67% complete, ETA 00:18:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.220 ms/op
# Warmup Iteration   2: 0.211 ms/op
# Warmup Iteration   3: 0.215 ms/op
Iteration   1: 0.211 ms/op
Iteration   2: 0.212 ms/op
Iteration   3: 0.212 ms/op
Iteration   4: 0.212 ms/op
Iteration   5: 0.214 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerCallable":
  0.212 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.211, 0.212, 0.214), stdev = 0.001
  CI (99.9%): [0.208, 0.216] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerCallable
# Parameters: (fileName = testCases/WorstCase_100.txt)

# Run progress: 68.33% complete, ETA 00:17:51
# Fork: 1 of 1
# Warmup Iteration   1: 1.813 ms/op
# Warmup Iteration   2: 1.576 ms/op
# Warmup Iteration   3: 1.545 ms/op
Iteration   1: 1.543 ms/op
Iteration   2: 1.569 ms/op
Iteration   3: 1.560 ms/op
Iteration   4: 1.554 ms/op
Iteration   5: 1.556 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerCallable":
  1.557 ±(99.9%) 0.037 ms/op [Average]
  (min, avg, max) = (1.543, 1.557, 1.569), stdev = 0.010
  CI (99.9%): [1.520, 1.593] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerCallable
# Parameters: (fileName = testCases/WorstCase_200.txt)

# Run progress: 70.00% complete, ETA 00:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 10.641 ms/op
# Warmup Iteration   2: 9.716 ms/op
# Warmup Iteration   3: 9.577 ms/op
Iteration   1: 9.638 ms/op
Iteration   2: 9.688 ms/op
Iteration   3: 9.663 ms/op
Iteration   4: 9.796 ms/op
Iteration   5: 9.896 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerCallable":
  9.736 ±(99.9%) 0.415 ms/op [Average]
  (min, avg, max) = (9.638, 9.736, 9.896), stdev = 0.108
  CI (99.9%): [9.321, 10.151] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerCallable
# Parameters: (fileName = testCases/WorstCase_1000.txt)

# Run progress: 71.67% complete, ETA 00:16:06
# Fork: 1 of 1
# Warmup Iteration   1: 463.478 ms/op
# Warmup Iteration   2: 417.466 ms/op
# Warmup Iteration   3: 419.335 ms/op
Iteration   1: 413.123 ms/op
Iteration   2: 409.330 ms/op
Iteration   3: 405.436 ms/op
Iteration   4: 409.444 ms/op
Iteration   5: 413.407 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerCallable":
  410.148 ±(99.9%) 12.601 ms/op [Average]
  (min, avg, max) = (405.436, 410.148, 413.407), stdev = 3.272
  CI (99.9%): [397.547, 422.749] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/WorstCase_10.txt)

# Run progress: 73.33% complete, ETA 00:15:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.479 ms/op
# Warmup Iteration   2: 0.457 ms/op
# Warmup Iteration   3: 0.461 ms/op
Iteration   1: 0.475 ms/op
Iteration   2: 0.475 ms/op
Iteration   3: 0.469 ms/op
Iteration   4: 0.464 ms/op
Iteration   5: 0.457 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerRunnable":
  0.468 ±(99.9%) 0.029 ms/op [Average]
  (min, avg, max) = (0.457, 0.468, 0.475), stdev = 0.008
  CI (99.9%): [0.439, 0.497] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/WorstCase_100.txt)

# Run progress: 75.00% complete, ETA 00:14:19
# Fork: 1 of 1
# Warmup Iteration   1: 3.101 ms/op
# Warmup Iteration   2: 2.834 ms/op
# Warmup Iteration   3: 2.810 ms/op
Iteration   1: 2.823 ms/op
Iteration   2: 2.812 ms/op
Iteration   3: 2.820 ms/op
Iteration   4: 2.825 ms/op
Iteration   5: 2.825 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerRunnable":
  2.821 ±(99.9%) 0.021 ms/op [Average]
  (min, avg, max) = (2.812, 2.821, 2.825), stdev = 0.005
  CI (99.9%): [2.800, 2.842] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/WorstCase_200.txt)

# Run progress: 76.67% complete, ETA 00:13:24
# Fork: 1 of 1
# Warmup Iteration   1: 13.200 ms/op
# Warmup Iteration   2: 11.945 ms/op
# Warmup Iteration   3: 11.765 ms/op
Iteration   1: 11.739 ms/op
Iteration   2: 11.768 ms/op
Iteration   3: 11.803 ms/op
Iteration   4: 11.810 ms/op
Iteration   5: 11.863 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerRunnable":
  11.796 ±(99.9%) 0.181 ms/op [Average]
  (min, avg, max) = (11.739, 11.796, 11.863), stdev = 0.047
  CI (99.9%): [11.616, 11.977] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.divideAndConquerRunnable
# Parameters: (fileName = testCases/WorstCase_1000.txt)

# Run progress: 78.33% complete, ETA 00:12:29
# Fork: 1 of 1
# Warmup Iteration   1: 443.865 ms/op
# Warmup Iteration   2: 399.619 ms/op
# Warmup Iteration   3: 394.216 ms/op
Iteration   1: 394.536 ms/op
Iteration   2: 400.225 ms/op
Iteration   3: 395.194 ms/op
Iteration   4: 401.438 ms/op
Iteration   5: 399.962 ms/op


Result "bench.BenchmarkWorstCases.divideAndConquerRunnable":
  398.271 ±(99.9%) 12.197 ms/op [Average]
  (min, avg, max) = (394.536, 398.271, 401.438), stdev = 3.167
  CI (99.9%): [386.074, 410.468] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.masterSlaveCallable
# Parameters: (fileName = testCases/WorstCase_10.txt)

# Run progress: 80.00% complete, ETA 00:11:34
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 10
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkWorstCases.masterSlaveCallable(BenchmarkWorstCases.java:57)
	at bench.generated.BenchmarkWorstCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkWorstCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkWorstCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkWorstCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.masterSlaveCallable
# Parameters: (fileName = testCases/WorstCase_100.txt)

# Run progress: 81.67% complete, ETA 00:10:23
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 100
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkWorstCases.masterSlaveCallable(BenchmarkWorstCases.java:57)
	at bench.generated.BenchmarkWorstCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkWorstCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkWorstCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkWorstCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.masterSlaveCallable
# Parameters: (fileName = testCases/WorstCase_200.txt)

# Run progress: 83.33% complete, ETA 00:09:15
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 200
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkWorstCases.masterSlaveCallable(BenchmarkWorstCases.java:57)
	at bench.generated.BenchmarkWorstCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkWorstCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkWorstCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkWorstCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.masterSlaveCallable
# Parameters: (fileName = testCases/WorstCase_1000.txt)

# Run progress: 85.00% complete, ETA 00:08:11
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: 1000
	at smp.Resource.get_all_prefs_at_current_request_position(JavaSMPMasterSlave.java:279)
	at smp.Master.proposal_round(JavaSMPMasterSlave.java:103)
	at smp.JavaSMPMasterSlave.run(JavaSMPMasterSlave.java:48)
	at bench.BenchmarkWorstCases.masterSlaveCallable(BenchmarkWorstCases.java:57)
	at bench.generated.BenchmarkWorstCases_masterSlaveCallable_jmhTest.masterSlaveCallable_avgt_jmhStub(BenchmarkWorstCases_masterSlaveCallable_jmhTest.java:232)
	at bench.generated.BenchmarkWorstCases_masterSlaveCallable_jmhTest.masterSlaveCallable_AverageTime(BenchmarkWorstCases_masterSlaveCallable_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.parallelGaleShapley
# Parameters: (fileName = testCases/WorstCase_10.txt)

# Run progress: 86.67% complete, ETA 00:07:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.245 ms/op
# Warmup Iteration   2: 0.226 ms/op
# Warmup Iteration   3: 0.227 ms/op
Iteration   1: 0.226 ms/op
Iteration   2: 0.228 ms/op
Iteration   3: 0.226 ms/op
Iteration   4: 0.228 ms/op
Iteration   5: 0.224 ms/op


Result "bench.BenchmarkWorstCases.parallelGaleShapley":
  0.226 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.224, 0.226, 0.228), stdev = 0.002
  CI (99.9%): [0.220, 0.232] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.parallelGaleShapley
# Parameters: (fileName = testCases/WorstCase_100.txt)

# Run progress: 88.33% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: 1.116 ms/op
# Warmup Iteration   2: 1.012 ms/op
# Warmup Iteration   3: 0.996 ms/op
Iteration   1: 0.982 ms/op
Iteration   2: 0.987 ms/op
Iteration   3: 0.988 ms/op
Iteration   4: 1.008 ms/op
Iteration   5: 1.003 ms/op


Result "bench.BenchmarkWorstCases.parallelGaleShapley":
  0.994 ±(99.9%) 0.044 ms/op [Average]
  (min, avg, max) = (0.982, 0.994, 1.008), stdev = 0.011
  CI (99.9%): [0.950, 1.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.parallelGaleShapley
# Parameters: (fileName = testCases/WorstCase_200.txt)

# Run progress: 90.00% complete, ETA 00:05:32
# Fork: 1 of 1
# Warmup Iteration   1: 5.220 ms/op
# Warmup Iteration   2: 4.926 ms/op
# Warmup Iteration   3: 4.902 ms/op
Iteration   1: 4.926 ms/op
Iteration   2: 4.934 ms/op
Iteration   3: 4.944 ms/op
Iteration   4: 4.905 ms/op
Iteration   5: 4.876 ms/op


Result "bench.BenchmarkWorstCases.parallelGaleShapley":
  4.917 ±(99.9%) 0.103 ms/op [Average]
  (min, avg, max) = (4.876, 4.917, 4.944), stdev = 0.027
  CI (99.9%): [4.814, 5.020] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.parallelGaleShapley
# Parameters: (fileName = testCases/WorstCase_1000.txt)

# Run progress: 91.67% complete, ETA 00:04:38
# Fork: 1 of 1
# Warmup Iteration   1: 378.699 ms/op
# Warmup Iteration   2: 377.863 ms/op
# Warmup Iteration   3: 385.073 ms/op
Iteration   1: 371.854 ms/op
Iteration   2: 369.633 ms/op
Iteration   3: 368.697 ms/op
Iteration   4: 369.861 ms/op
Iteration   5: 369.498 ms/op


Result "bench.BenchmarkWorstCases.parallelGaleShapley":
  369.909 ±(99.9%) 4.515 ms/op [Average]
  (min, avg, max) = (368.697, 369.909, 371.854), stdev = 1.172
  CI (99.9%): [365.394, 374.423] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.serial
# Parameters: (fileName = testCases/WorstCase_10.txt)

# Run progress: 93.33% complete, ETA 00:03:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.021 ms/op
# Warmup Iteration   2: 0.018 ms/op
# Warmup Iteration   3: 0.018 ms/op
Iteration   1: 0.018 ms/op
Iteration   2: 0.018 ms/op
Iteration   3: 0.018 ms/op
Iteration   4: 0.018 ms/op
Iteration   5: 0.018 ms/op


Result "bench.BenchmarkWorstCases.serial":
  0.018 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.018, 0.018, 0.018), stdev = 0.001
  CI (99.9%): [0.018, 0.018] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.serial
# Parameters: (fileName = testCases/WorstCase_100.txt)

# Run progress: 95.00% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 6.110 ms/op
# Warmup Iteration   2: 5.651 ms/op
# Warmup Iteration   3: 5.681 ms/op
Iteration   1: 5.679 ms/op
Iteration   2: 5.702 ms/op
Iteration   3: 5.745 ms/op
Iteration   4: 5.855 ms/op
Iteration   5: 6.081 ms/op


Result "bench.BenchmarkWorstCases.serial":
  5.812 ±(99.9%) 0.635 ms/op [Average]
  (min, avg, max) = (5.679, 5.812, 6.081), stdev = 0.165
  CI (99.9%): [5.178, 6.447] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.serial
# Parameters: (fileName = testCases/WorstCase_200.txt)

# Run progress: 96.67% complete, ETA 00:01:52
# Fork: 1 of 1
# Warmup Iteration   1: 50.572 ms/op
# Warmup Iteration   2: 43.698 ms/op
# Warmup Iteration   3: 41.461 ms/op
Iteration   1: 41.168 ms/op
Iteration   2: 40.167 ms/op
Iteration   3: 40.212 ms/op
Iteration   4: 40.762 ms/op
Iteration   5: 40.100 ms/op


Result "bench.BenchmarkWorstCases.serial":
  40.482 ±(99.9%) 1.793 ms/op [Average]
  (min, avg, max) = (40.100, 40.482, 41.168), stdev = 0.466
  CI (99.9%): [38.689, 42.275] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_191, Java HotSpot(TM) 64-Bit Server VM, 25.191-b12
# VM invoker: C:\Program Files\Java\jdk1.8.0_191\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar=61621:C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 5 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 1 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: bench.BenchmarkWorstCases.serial
# Parameters: (fileName = testCases/WorstCase_1000.txt)

# Run progress: 98.33% complete, ETA 00:00:56
# Fork: 1 of 1
# Warmup Iteration   1: 14396.058 ms/op
# Warmup Iteration   2: 14354.583 ms/op
# Warmup Iteration   3: 13467.657 ms/op
Iteration   1: 10731.677 ms/op
Iteration   2: 13935.307 ms/op
Iteration   3: 14219.518 ms/op
Iteration   4: 13888.382 ms/op
Iteration   5: 15136.121 ms/op


Result "bench.BenchmarkWorstCases.serial":
  13582.201 ±(99.9%) 6433.214 ms/op [Average]
  (min, avg, max) = (10731.677, 13582.201, 15136.121), stdev = 1670.685
  CI (99.9%): [7148.987, 20015.415] (assumes normal distribution)


# Run complete. Total time: 00:57:27

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                        (fileName)  Mode  Cnt      Score      Error  Units
BenchmarkBestCases.divideAndConquerCallable       testCases/BestCase_10.txt  avgt    5      0.217 ±    0.030  ms/op
BenchmarkBestCases.divideAndConquerCallable      testCases/BestCase_100.txt  avgt    5      0.753 ±    0.066  ms/op
BenchmarkBestCases.divideAndConquerCallable      testCases/BestCase_200.txt  avgt    5      2.037 ±    0.085  ms/op
BenchmarkBestCases.divideAndConquerCallable     testCases/BestCase_1000.txt  avgt    5     41.047 ±    1.178  ms/op
BenchmarkBestCases.divideAndConquerRunnable       testCases/BestCase_10.txt  avgt    5      0.463 ±    0.029  ms/op
BenchmarkBestCases.divideAndConquerRunnable      testCases/BestCase_100.txt  avgt    5      1.984 ±    0.131  ms/op
BenchmarkBestCases.divideAndConquerRunnable      testCases/BestCase_200.txt  avgt    5      3.935 ±    0.127  ms/op
BenchmarkBestCases.divideAndConquerRunnable     testCases/BestCase_1000.txt  avgt    5     60.682 ±   10.836  ms/op
BenchmarkBestCases.parallelGaleShapley            testCases/BestCase_10.txt  avgt    5      0.234 ±    0.007  ms/op
BenchmarkBestCases.parallelGaleShapley           testCases/BestCase_100.txt  avgt    5      0.400 ±    0.007  ms/op
BenchmarkBestCases.parallelGaleShapley           testCases/BestCase_200.txt  avgt    5      0.526 ±    0.016  ms/op
BenchmarkBestCases.parallelGaleShapley          testCases/BestCase_1000.txt  avgt    5      1.637 ±    0.078  ms/op
BenchmarkBestCases.serial                         testCases/BestCase_10.txt  avgt    5      0.011 ±    0.001  ms/op
BenchmarkBestCases.serial                        testCases/BestCase_100.txt  avgt    5      0.844 ±    0.005  ms/op
BenchmarkBestCases.serial                        testCases/BestCase_200.txt  avgt    5      3.445 ±    0.041  ms/op
BenchmarkBestCases.serial                       testCases/BestCase_1000.txt  avgt    5     91.395 ±    1.247  ms/op
BenchmarkRandomCases.divideAndConquerCallable       testCases/Random_10.txt  avgt    5      0.208 ±    0.004  ms/op
BenchmarkRandomCases.divideAndConquerCallable      testCases/Random_100.txt  avgt    5      0.987 ±    0.015  ms/op
BenchmarkRandomCases.divideAndConquerCallable      testCases/Random_200.txt  avgt    5      3.623 ±    0.113  ms/op
BenchmarkRandomCases.divideAndConquerCallable     testCases/Random_1000.txt  avgt    5     68.379 ±    1.863  ms/op
BenchmarkRandomCases.divideAndConquerRunnable       testCases/Random_10.txt  avgt    5      0.476 ±    0.052  ms/op
BenchmarkRandomCases.divideAndConquerRunnable      testCases/Random_100.txt  avgt    5      2.184 ±    0.031  ms/op
BenchmarkRandomCases.divideAndConquerRunnable      testCases/Random_200.txt  avgt    5      5.471 ±    0.212  ms/op
BenchmarkRandomCases.divideAndConquerRunnable     testCases/Random_1000.txt  avgt    5     91.257 ±   24.190  ms/op
BenchmarkRandomCases.parallelGaleShapley            testCases/Random_10.txt  avgt    5      0.232 ±    0.009  ms/op
BenchmarkRandomCases.parallelGaleShapley           testCases/Random_100.txt  avgt    5      0.399 ±    0.007  ms/op
BenchmarkRandomCases.parallelGaleShapley           testCases/Random_200.txt  avgt    5      0.570 ±    0.011  ms/op
BenchmarkRandomCases.parallelGaleShapley          testCases/Random_1000.txt  avgt    5      2.497 ±    0.025  ms/op
BenchmarkRandomCases.serial                         testCases/Random_10.txt  avgt    5      0.013 ±    0.001  ms/op
BenchmarkRandomCases.serial                        testCases/Random_100.txt  avgt    5      1.072 ±    0.021  ms/op
BenchmarkRandomCases.serial                        testCases/Random_200.txt  avgt    5      5.117 ±    0.023  ms/op
BenchmarkRandomCases.serial                       testCases/Random_1000.txt  avgt    5    150.422 ±    1.949  ms/op
BenchmarkWorstCases.divideAndConquerCallable     testCases/WorstCase_10.txt  avgt    5      0.212 ±    0.004  ms/op
BenchmarkWorstCases.divideAndConquerCallable    testCases/WorstCase_100.txt  avgt    5      1.557 ±    0.037  ms/op
BenchmarkWorstCases.divideAndConquerCallable    testCases/WorstCase_200.txt  avgt    5      9.736 ±    0.415  ms/op
BenchmarkWorstCases.divideAndConquerCallable   testCases/WorstCase_1000.txt  avgt    5    410.148 ±   12.601  ms/op
BenchmarkWorstCases.divideAndConquerRunnable     testCases/WorstCase_10.txt  avgt    5      0.468 ±    0.029  ms/op
BenchmarkWorstCases.divideAndConquerRunnable    testCases/WorstCase_100.txt  avgt    5      2.821 ±    0.021  ms/op
BenchmarkWorstCases.divideAndConquerRunnable    testCases/WorstCase_200.txt  avgt    5     11.796 ±    0.181  ms/op
BenchmarkWorstCases.divideAndConquerRunnable   testCases/WorstCase_1000.txt  avgt    5    398.271 ±   12.197  ms/op
BenchmarkWorstCases.parallelGaleShapley          testCases/WorstCase_10.txt  avgt    5      0.226 ±    0.006  ms/op
BenchmarkWorstCases.parallelGaleShapley         testCases/WorstCase_100.txt  avgt    5      0.994 ±    0.044  ms/op
BenchmarkWorstCases.parallelGaleShapley         testCases/WorstCase_200.txt  avgt    5      4.917 ±    0.103  ms/op
BenchmarkWorstCases.parallelGaleShapley        testCases/WorstCase_1000.txt  avgt    5    369.909 ±    4.515  ms/op
BenchmarkWorstCases.serial                       testCases/WorstCase_10.txt  avgt    5      0.018 ±    0.001  ms/op
BenchmarkWorstCases.serial                      testCases/WorstCase_100.txt  avgt    5      5.812 ±    0.635  ms/op
BenchmarkWorstCases.serial                      testCases/WorstCase_200.txt  avgt    5     40.482 ±    1.793  ms/op
BenchmarkWorstCases.serial                     testCases/WorstCase_1000.txt  avgt    5  13582.201 ± 6433.214  ms/op

Process finished with exit code 0
